#include "main.h"


int main ()
{
	//enable RCC
	RCC->APB2ENR=(1<<2) | (1<<3); // enable ports A&B
	//config PINS.
	//config A O/P pins 1,2,3  [7,6|5,4]  [11,10|9,8] [15,14|13,12] [cof =00 |mode =11]
	GPIOA->CRL=(3<<4) | (3<<8) | (3<<12); //L1,L2,L3
	//B O/P Pins  9 [7,6|5,4]  [C=00 | M=11]
	GPIOB->CRH=(3<<4); //BuZZer
	//B I/P Pins 4,5 CRL [19,18|17,16] [23,22|21,20]
	//PIN 8 CRH [3,2|1,0]  [C=01|M=00]
	GPIOB->CRL =(4<<16)|(4<<20); // Sw2, Sw3
	GPIOB->CRH |=(4<<0); //Sw1

	while(1)
	{
		//bit masking
		//I/P Masking
		auto Sw1=GPIOB->IDR &(1<<8);
		auto Sw2=GPIOB->IDR &(1<<4);
		auto Sw3=GPIOB->IDR &(1<<5);
		//O/P Masking
		//auto Buzz=GPIOB->ODR ^=(1<<9);  //Buzzer
		//auto L1=GPIOA->ODR =(1<<1);   // LED1
		//auto L2=GPIOA->ODR =(1<<2);  //  LED2
		//auto L3=GPIOA->ODR =(1<<3); //   LED3

		//setting pin with if condtion.
		/*if(Sw1!=1 && Sw2!=0 && Sw3 !=0)  //1 sw1 is pressed
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR =(1<<1);   // LED1 ON
			GPIOB->ODR ^=(1<<9);

		}
		else if (Sw1!=0 && Sw2!=1 && Sw3 !=0) //2
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR =(1<<2);  //  LED2
			GPIOB->ODR ^=(1<<9); //^= toggle
		}
		else if (Sw1!=1 && Sw2!=1 && Sw3 !=0) //3
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR= (1<<1);   // LED1
			GPIOA->ODR =(1<<2);  //  LED2
			GPIOB->ODR ^=(1<<9);
		}
		else if (Sw1!=0 && Sw2!=0 && Sw3 !=1) //4
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR =(1<<3); //   LED3
			GPIOB->ODR ^=(1<<9);

		}
		else if (Sw1!=1 && Sw2!=0 && Sw3 !=1) //5
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR =(1<<1);   // LED1
			GPIOA->ODR =(1<<3); //   LED3
			GPIOB->ODR ^=(1<<9);

		}
		else if (Sw1!=0 && Sw2!=1 && Sw3 !=1) //6
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR =(1<<2);  //  LED2
			GPIOA->ODR =(1<<3); //   LED3
			GPIOB->ODR ^=(1<<9);
		}
		else if (Sw1!=1 && Sw2!=1 && Sw3 !=1) //7
		{
			for(int i{0};i<1000;i++);
			GPIOA->ODR =(1<<1);   // LED1
			GPIOA->ODR =(1<<2);  //  LED2
			GPIOA->ODR =(1<<3); //   LED3
			GPIOB->ODR ^=(1<<9);
		}
		else if (Sw1!=0 && Sw2!=0 && Sw3!=0)
		{
			GPIOB->ODR &=~(1<<9);
			GPIOA->ODR &=~(1<<1);   // LED1
			GPIOA->ODR &=~(1<<2);  //  LED2
			GPIOA->ODR &=~(1<<3); //   LED3
		}*/

		if(Sw1!=1)
		{
			GPIOA->ODR ^=(1<<1);
		}

		else
		{
			GPIOA->ODR&=~(1<<1);
		}

		if(Sw2==0)
		{
			GPIOA->ODR =(1<<2);
		}
		else
		{
			GPIOA->ODR&=~(1<<2);
		}

		if(Sw3==0)
		{
			GPIOA->ODR =(1<<3);
		}
		else
		{
			GPIOA->ODR &=~(1<<3);
		}
	}

	return 0;
}
