/*
 * OP.hpp
 *
 *  Created on: Jul 19, 2024
 *      Author: AHMED ABDELAZIZ
 */

#ifndef INC_OP_HPP_
#define INC_OP_HPP_
#include "main.h"

static constexpr  uint32_t OP_50MHZ =3;
static constexpr  uint32_t BIT_per_PIN =4;
static constexpr  uint32_t BIT_per_REG =32;
static constexpr  uint32_t PIN_per_REG =8;

class OP
{
public:
	OP(GPIO_TypeDef * GPIO, uint8_t pin) : PORT_{GPIO}, PIN_{pin}
	{
		if(COUNT ==0)
		{
		if(PIN_ < PIN_per_REG)
		{
			PORT_->CRL =(OP_50MHZ<<(PIN_* BI_per_PIN));
		}
		else
		{
			PORT_->CRH =(OP_50MHZ<<((PIN_* BI_per_PIN)-BIT_per_REG));
		}
		OFF();
		}
		if(PIN_ < PIN_per_REG)
		{
			PORT_->CRL |=(OP_50MHZ<<(PIN_* BI_per_PIN));
		}
		else
		{
			PORT_->CRH |=(OP_50MHZ<<((PIN_* BI_per_PIN)-BIT_per_REG));
		}
		OFF();
	}
	void ON()
	{
		PORT_->ODR |=(1<<PIN_);
	}

	void OFF()
	{
		PORT_->ODR &=~(1<<PIN_);
	}
	void TOGGLE()
	{
		PORT_->ODR ^=(1<<PIN_);
	}
	~OP()
	{
		OFF();
	}


private:
	GPIO_TypeDef * PORT_;
	uint8_t Pin_;
	inline static uint32_t COUNT;
};




#endif /* INC_OP_HPP_ */
